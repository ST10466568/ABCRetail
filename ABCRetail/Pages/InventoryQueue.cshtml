@page
@model ABCRetail.Pages.InventoryQueueModel
@{
    ViewData["Title"] = "Inventory Queue Management";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">
                        <i class="fas fa-queue me-2"></i>Inventory Queue Management
                    </h4>
                    <div>
                        <button type="button" class="btn btn-primary me-2" data-bs-toggle="modal" data-bs-target="#sendMessageModal">
                            <i class="fas fa-plus me-1"></i>Send Message
                        </button>
                        <button type="button" class="btn btn-secondary me-2" onclick="refreshQueue()">
                            <i class="fas fa-sync-alt me-1"></i>Refresh
                        </button>
                        <button type="button" class="btn btn-warning" onclick="clearQueue()">
                            <i class="fas fa-trash me-1"></i>Clear Queue
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Queue Statistics -->
                    <div class="row mb-4">
                        <div class="col-md-3">
                            <div class="kpi-card text-center">
                                <div class="kpi-value text-primary">@Model.QueueLength</div>
                                <div class="kpi-label">Messages in Queue</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="kpi-card text-center">
                                <div class="kpi-value text-success">@Model.PendingCount</div>
                                <div class="kpi-label">Pending</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="kpi-card text-center">
                                <div class="kpi-value text-warning">@Model.ProcessingCount</div>
                                <div class="kpi-label">Processing</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="kpi-card text-center">
                                <div class="kpi-value text-info">@Model.CompletedCount</div>
                                <div class="kpi-label">Completed</div>
                            </div>
                        </div>
                    </div>

                    <!-- Messages Table -->
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Type</th>
                                    <th>Product</th>
                                    <th>Action</th>
                                    <th>Quantity</th>
                                    <th>Priority</th>
                                    <th>Status</th>
                                    <th>Timestamp</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Messages.Any())
                                {
                                    @foreach (var message in Model.Messages)
                                    {
                                        <tr class="message-row" data-message-id="@message.Id">
                                            <td>
                                                <small class="text-muted">@message.Id.Substring(0, 8)...</small>
                                            </td>
                                            <td>
                                                <span class="badge bg-secondary">@message.Type</span>
                                            </td>
                                            <td>
                                                <strong>@message.ProductName</strong>
                                                @if (!string.IsNullOrEmpty(message.ProductId))
                                                {
                                                    <br><small class="text-muted">ID: @message.ProductId.Substring(0, 8)...</small>
                                                }
                                            </td>
                                            <td>
                                                <span class="badge bg-info">@message.Action</span>
                                            </td>
                                            <td>
                                                <span class="badge bg-primary">@message.Quantity</span>
                                            </td>
                                            <td>
                                                @{
                                                    var priorityClass = message.Priority switch
                                                    {
                                                        "urgent" => "bg-danger",
                                                        "high" => "bg-warning",
                                                        "normal" => "bg-primary",
                                                        "low" => "bg-secondary",
                                                        _ => "bg-secondary"
                                                    };
                                                }
                                                <span class="badge @priorityClass">@message.Priority</span>
                                            </td>
                                            <td>
                                                @{
                                                    var statusClass = message.Status switch
                                                    {
                                                        "pending" => "bg-warning",
                                                        "processing" => "bg-info",
                                                        "completed" => "bg-success",
                                                        "failed" => "bg-danger",
                                                        _ => "bg-secondary"
                                                    };
                                                }
                                                <span class="badge @statusClass">@message.Status</span>
                                            </td>
                                            <td>
                                                <small class="text-muted">@message.Timestamp.ToString("MMM dd, yyyy HH:mm")</small>
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <button type="button" class="btn btn-outline-primary" onclick="viewMessage('@message.Id')" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                    <button type="button" class="btn btn-outline-success" onclick="processMessage('@message.Id')" title="Process Message">
                                                        <i class="fas fa-play"></i>
                                                    </button>
                                                    <button type="button" class="btn btn-outline-danger" onclick="deleteMessage('@message.Id')" title="Delete Message">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="9" class="text-center text-muted py-4">
                                            <i class="fas fa-inbox fa-3x mb-3"></i>
                                            <p>No messages in the inventory queue</p>
                                            <p class="small">Send a message to get started</p>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Send Message Modal -->
<div class="modal fade" id="sendMessageModal" tabindex="-1" aria-labelledby="sendMessageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="sendMessageModalLabel">Send Inventory Message</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-page-handler="SendMessage">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="NewMessage.Type" class="form-label">Message Type</label>
                                <select asp-for="NewMessage.Type" class="form-select" required>
                                    <option value="">Select Type</option>
                                    <option value="inventory_update">Inventory Update</option>
                                    <option value="low_stock_alert">Low Stock Alert</option>
                                    <option value="out_of_stock_alert">Out of Stock Alert</option>
                                    <option value="restock_request">Restock Request</option>
                                    <option value="inventory_audit">Inventory Audit</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="NewMessage.Action" class="form-label">Action</label>
                                <select asp-for="NewMessage.Action" class="form-select" required>
                                    <option value="">Select Action</option>
                                    <option value="add">Add</option>
                                    <option value="remove">Remove</option>
                                    <option value="update">Update</option>
                                    <option value="alert">Alert</option>
                                    <option value="request">Request</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="NewMessage.ProductId" class="form-label">Product ID</label>
                                <input asp-for="NewMessage.ProductId" class="form-control" placeholder="Enter Product ID">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="NewMessage.ProductName" class="form-label">Product Name</label>
                                <input asp-for="NewMessage.ProductName" class="form-control" placeholder="Enter Product Name" required>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label asp-for="NewMessage.Quantity" class="form-label">Quantity</label>
                                <input asp-for="NewMessage.Quantity" type="number" class="form-control" value="1" min="0">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label asp-for="NewMessage.Priority" class="form-label">Priority</label>
                                <select asp-for="NewMessage.Priority" class="form-select">
                                    <option value="low">Low</option>
                                    <option value="normal" selected>Normal</option>
                                    <option value="high">High</option>
                                    <option value="urgent">Urgent</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label asp-for="NewMessage.UserId" class="form-label">User ID</label>
                                <input asp-for="NewMessage.UserId" class="form-control" placeholder="Enter User ID">
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="NewMessage.Notes" class="form-label">Notes</label>
                        <textarea asp-for="NewMessage.Notes" class="form-control" rows="3" placeholder="Enter additional notes..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-paper-plane me-1"></i>Send Message
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Message Details Modal -->
<div class="modal fade" id="messageDetailsModal" tabindex="-1" aria-labelledby="messageDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="messageDetailsModalLabel">Message Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="messageDetailsContent">
                <!-- Message details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function refreshQueue() {
            location.reload();
        }
        
        function clearQueue() {
            if (confirm('Are you sure you want to clear all messages from the queue? This action cannot be undone.')) {
                fetch('?handler=ClearQueue', {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                }).then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Failed to clear queue');
                    }
                });
            }
        }
        
        function viewMessage(messageId) {
            // Load message details and show modal
            fetch(`?handler=GetMessage&messageId=${messageId}`)
                .then(response => response.json())
                .then(data => {
                    const content = document.getElementById('messageDetailsContent');
                    content.innerHTML = `
                        <div class="row">
                            <div class="col-md-6">
                                <p><strong>ID:</strong> ${data.id}</p>
                                <p><strong>Type:</strong> ${data.type}</p>
                                <p><strong>Action:</strong> ${data.action}</p>
                                <p><strong>Product:</strong> ${data.productName}</p>
                            </div>
                            <div class="col-md-6">
                                <p><strong>Quantity:</strong> ${data.quantity}</p>
                                <p><strong>Priority:</strong> ${data.priority}</p>
                                <p><strong>Status:</strong> ${data.status}</p>
                                <p><strong>Timestamp:</strong> ${new Date(data.timestamp).toLocaleString()}</p>
                            </div>
                        </div>
                        ${data.notes ? `<p><strong>Notes:</strong> ${data.notes}</p>` : ''}
                    `;
                    new bootstrap.Modal(document.getElementById('messageDetailsModal')).show();
                });
        }
        
        function processMessage(messageId) {
            if (confirm('Mark this message as processing?')) {
                fetch('?handler=ProcessMessage', {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ messageId: messageId })
                }).then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Failed to process message');
                    }
                });
            }
        }
        
        function deleteMessage(messageId) {
            if (confirm('Are you sure you want to delete this message?')) {
                fetch('?handler=DeleteMessage', {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ messageId: messageId })
                }).then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Failed to delete message');
                    }
                });
            }
        }
        
        // Auto-refresh every 30 seconds
        setInterval(refreshQueue, 30000);
    </script>
}
